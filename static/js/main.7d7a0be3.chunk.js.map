{"version":3,"sources":["components/Button.js","components/Screen.js","components/Menu.js","data/heaterKit.js","data/pianoKit.js","data/electroKit.js","App.js","index.js"],"names":["Button","buttonClass","id","handleClick","volume","char","type","clicked","power","hideKeys","className","onClick","Screen","audioName","on","useState","restartAnimation","setRestartAnimation","useEffect","prev","key","Math","floor","Menu","changeVolume","toggleOn","toggleHideKeys","mode","changeMode","min","max","step","value","onChange","style","color","name","src","window","location","origin","App","audio","setAudio","activeAudio","setActiveAudio","audioData","setAudioData","setOn","setMode","setVolume","changeToggle","setChangeToggle","setHideKeys","drumRef","useRef","forEach","item","index","currentTime","play","data","heaterKit","pianoKit","electroKit","sounds","map","Audio","soundInfo","keyId","buttonComponents","tabIndex","ref","onKeyDown","event","keyCode","copy","setTimeout","copy2","handleKey","target","state","ReactDOM","render","document","getElementById"],"mappings":"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,IAAK,GACLf,KAAM,IACN+B,KAAM,UACN9B,KAAM,QACN+B,IAAK,2DAET,CACInC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,UACN9B,KAAM,QACN+B,IAAK,2DAET,CACInC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,UACN9B,KAAM,QACN+B,IAAK,2DAET,CACInC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,SACN9B,KAAM,SACN+B,IAAK,mEAET,CACInC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,UACN9B,KAAM,UACN+B,IAAK,2DAET,CACInC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,YACN9B,KAAM,UACN+B,IAAK,0DAET,CACInC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,YACN9B,KAAM,YACN+B,IAAK,0DAGT,CACInC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,cACN9B,KAAM,OACN+B,IAAK,iEAGT,CACInC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,aACN9B,KAAM,aACN+B,IAAK,gEAGT,CACInC,GAAI,GACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,QACN9B,KAAM,QACN+B,IAAK,2DAGT,CACInC,GAAI,GACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,OACN9B,KAAM,OACN+B,IAAK,4DAGT,CACInC,GAAI,GACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,SACN9B,KAAM,OACN+B,IAAK,+DCpGE,GACX,CACInC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,SACN9B,KAAM,OACN+B,IAAKC,OAAOC,SAASC,OAAS,kCAGlC,CACItC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,SACN9B,KAAM,OACN+B,IAAKC,OAAOC,SAASC,OAAS,kCAGlC,CACItC,GAAI,EACJkB,IAAK,GACLf,KAAM,IACN+B,KAAM,eACN9B,KAAM,YACN+B,IAAKC,OAAOC,SAASC,OAAS,uCAGlC,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","file":"static/js/main.7d7a0be3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/button.css\";\n\nconst Button = ({\n  id,\n  handleClick,\n  volume,\n  char,\n  type,\n  clicked,\n  power,\n  hideKeys,\n}) => {\n  // Functional Button component\n\n  // Classes for different button styles\n  let buttonClass;\n  // Power On/Off\n  if (!power) {\n    buttonClass = clicked ? \"off-active\" : \"off\";\n  } else {\n    // Button is clicked / not clicked\n    buttonClass = clicked\n      ? `drum-button-active ${type}-active`\n      : `drum-button ${type}`;\n  }\n\n  return (\n    <button className={buttonClass} onClick={() => handleClick(id, volume)}>\n      {hideKeys ? null : char}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport \"../styles/screen.css\";\n\nconst Screen = ({ audioName, volume, on }) => {\n  // Screen component that shows the audio volume level and audio name\n\n  // State required for the audio name display animation\n  const [restartAnimation, setRestartAnimation] = useState(false);\n\n  // Restart animation everytime the audioName changes\n  useEffect(() => {\n    return () => setRestartAnimation((prev) => !prev);\n  }, [audioName]);\n\n  return (\n    <div\n      key={restartAnimation ? \"1\" : \"0\"}\n      className={on ? \"screen-on\" : \"screen-off\"}\n    >\n      {on ? (\n        <span className=\"volume\">\n          <i\n            className={volume > 0 ? \"fa fa-volume-up\" : \"fa fa-volume-off\"}\n          ></i>\n          {Math.floor(volume * 100)}\n        </span>\n      ) : null}\n      <span className=\"audio-name\">{audioName}</span>\n    </div>\n  );\n};\n\nexport default Screen;\n","import React from \"react\";\nimport Screen from \"./Screen\";\nimport \"../styles/menu.css\";\n\nconst Menu = ({\n  audioName,\n  volume,\n  changeVolume,\n  on,\n  toggleOn,\n  hideKeys,\n  toggleHideKeys,\n  mode,\n  changeMode,\n}) => {\n  // Menu component (screen, volume, mode, on/off)\n  return (\n    <div className=\"menu\">\n      <Screen audioName={audioName} volume={volume * 1} on={on} />\n      <br />\n      <label>\n        <span>\n          <i className=\"fa fa-volume-up\"></i>\n        </span>\n        {/* Volume level slider */}\n        <input\n          className=\"slider\"\n          type=\"range\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={volume}\n          onChange={changeVolume}\n        />\n      </label>\n      <br />\n      <div className=\"menu-buttons-container\">\n        {/* <div className={on ? \"menu-buttons-on\" : \"menu-buttons-off\"}> */}\n        <div className={`menu-buttons ${!on ? \"menu-off\" : \"menu-on\"}`}>\n          <button\n            className={mode === \"heater\" ? \"selected\" : null}\n            onClick={() => changeMode(\"heater\")}\n          >\n            Heater\n          </button>\n          <button\n            className={mode === \"piano\" ? \"selected\" : null}\n            onClick={() => changeMode(\"piano\")}\n          >\n            Piano\n          </button>\n          <button\n            className={mode === \"electro\" ? \"selected\" : null}\n            onClick={() => changeMode(\"electro\")}\n          >\n            Electro\n          </button>\n          <button onClick={toggleHideKeys}>\n            {hideKeys ? \"Show Keys\" : \"Hide Keys\"}\n          </button>\n        </div>\n        <button className=\"power-button\" onClick={toggleOn}>\n          {/* Power On/Off style */}\n          <i\n            className=\"fa fa-power-off fa-2x\"\n            style={{ color: on ? \"white\" : \"#C4BFBF\" }}\n          ></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","export default [\n    {\n        id: 1,\n        key: 81,\n        char: 'Q',\n        name: 'Heater-1',\n        type:'heater',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n    },\n    {\n        id: 2,\n        key: 87,\n        char: 'W',\n        name: 'Heater-2',\n        type: 'heater',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n    },\n    {\n        id: 3,\n        key: 69,\n        char: 'E',\n        name: 'Heater-3',\n        type: 'heater',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n    },\n    {\n        id: 4,\n        key: 82,\n        char: 'R',\n        name: 'Heater-4',\n        type: 'heater',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n    },\n    {\n        id: 5,\n        key: 65,\n        char: 'A',\n        name: 'Clap',\n        type: 'clap',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n    },\n    {\n        id: 6,\n        key: 83,\n        char: 'S',\n        name: 'Open-HH',\n        type: 'open-hh',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n    },\n    {\n        id: 7,\n        key: 68,\n        char: 'D',\n        name: 'Kick-n-Hat',\n        type: 'kick',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n    },\n\n    {\n        id: 8,\n        key: 70,\n        char: 'F',\n        name: 'Kick',\n        type: 'kick',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n    },\n\n    {\n        id: 9,\n        key: 90,\n        char: 'Z',\n        name: 'Closed-HH',\n        type: 'closed-hh',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n    },\n\n    {\n        id: 10,\n        key: 88,\n        char: 'X',\n        name: 'Punchy-Kick',\n        type: 'kick',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\n    },\n\n    {\n        id: 11,\n        key: 67,\n        char: 'C',\n        name: 'Side-Stick',\n        type: 'side-stick',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n    },\n\n    {\n        id: 12,\n        key: 86,\n        char: 'V',\n        name: 'Snare',\n        type: 'snare',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n    }\n\n\n]","export default [\n    {\n        id: 1,\n        key: 81,\n        char: 'Q',\n        name: 'Chord-1',\n        type: 'chord',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n    },\n    {\n        id: 2,\n        key: 87,\n        char: 'W',\n        name: 'Chord-2',\n        type: 'chord',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n    },\n    {\n        id: 3,\n        key: 69,\n        char: 'E',\n        name: 'Chord-3',\n        type: 'chord',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n    },\n    {\n        id: 4,\n        key: 82,\n        char: 'R',\n        name: 'Shaker',\n        type: 'shaker',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n    },\n    {\n        id: 5,\n        key: 65,\n        char: 'A',\n        name: 'Open-HH',\n        type: 'open-hh',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n    },\n    {\n        id: 6,\n        key: 83,\n        char: 'S',\n        name: 'Open-HH-2',\n        type: 'open-hh',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n    },\n    {\n        id: 7,\n        key: 68,\n        char: 'D',\n        name: 'Closed-HH',\n        type: 'closed-hh',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n    },\n\n    {\n        id: 8,\n        key: 70,\n        char: 'F',\n        name: 'Punchy-Kick',\n        type: 'kick',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n    },\n\n    {\n        id: 9,\n        key: 90,\n        char: 'Z',\n        name: 'Side-Stick',\n        type: 'side-stick',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n    },\n\n    {\n        id: 10,\n        key: 88,\n        char: 'X',\n        name: 'Snare',\n        type: 'snare',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\n    },\n\n    {\n        id: 11,\n        key: 67,\n        char: 'C',\n        name: 'Clap',\n        type: 'clap',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n    },\n\n    {\n        id: 12,\n        key: 86,\n        char: 'V',\n        name: 'Kick-2',\n        type: 'kick',\n        src: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n    }\n]","export default [\n    {\n        id: 1,\n        key: 81,\n        char: 'Q',\n        name: 'Clap-1',\n        type: 'clap',\n        src: window.location.origin + '/sounds/electro-kit/Clap-1.wav'\n    },\n\n    {\n        id: 2,\n        key: 87,\n        char: 'W',\n        name: 'Clap-2',\n        type: 'clap',\n        src: window.location.origin + '/sounds/electro-kit/Clap-2.wav'\n    },\n\n    {\n        id: 3,\n        key: 69,\n        char: 'E',\n        name: 'Closed-Hat-1',\n        type: 'closed-hh',\n        src: window.location.origin + '/sounds/electro-kit/Close-Hat-1.wav'\n    },\n\n    {\n        id: 4,\n        key: 82,\n        char: 'R',\n        name: 'Closed-Hat-2',\n        type: 'closed-hh',\n        src: window.location.origin + '/sounds/electro-kit/Close-Hat-2.wav'\n    },\n\n    {\n        id: 5,\n        key: 65,\n        char: 'A',\n        name: 'Closed-Hat-3',\n        type: 'closed-hh',\n        src: window.location.origin + '/sounds/electro-kit/Close-Hat-3.wav'\n    },\n\n    {\n        id: 6,\n        key: 83,\n        char: 'S',\n        name: 'Closed-Hat-4',\n        type: 'closed-hh',\n        src: window.location.origin + '/sounds/electro-kit/Close-Hat-4.wav'\n    },\n\n    {\n        id: 7,\n        key: 68,\n        char: 'D',\n        name: 'Kick-1',\n        type: 'kick',\n        src: window.location.origin + '/sounds/electro-kit/Kick-1.wav'\n    },\n\n    {\n        id: 8,\n        key: 70,\n        char: 'F',\n        name: 'Kick-2',\n        type: 'kick',\n        src: window.location.origin + '/sounds/electro-kit/Kick-2.wav'\n    },\n\n    {\n        id: 9,\n        key: 90,\n        char: 'Z',\n        name: 'Open-Hat-1',\n        type: 'open-hh',\n        src: window.location.origin + '/sounds/electro-kit/Open-Hat-1.wav'\n    },\n\n    {\n        id: 10,\n        key: 88,\n        char: 'X',\n        name: 'Open-Hat-2',\n        type: 'open-hh',\n        src: window.location.origin + '/sounds/electro-kit/Open-Hat-2.wav'\n    },\n\n    {\n        id: 11,\n        key: 67,\n        char: 'C',\n        name: 'Snare-1',\n        type: 'snare',\n        src: window.location.origin + '/sounds/electro-kit/Snare-1.wav'\n    },\n\n    {\n        id: 12,\n        key: 86,\n        char: 'V',\n        name: 'Snare-2',\n        type: 'snare',\n        src: window.location.origin + '/sounds/electro-kit/Snare-2.wav'\n    }\n\n];","import React, { useState, useEffect, useRef } from \"react\";\nimport Button from \"./components/Button\";\nimport Menu from \"./components/Menu\";\nimport heaterKit from \"./data/heaterKit\";\nimport pianoKit from \"./data/pianoKit\";\nimport electroKit from \"./data/electroKit\";\nimport \"./styles/app.css\";\n\nfunction App() {\n  // App state\n\n  // Array holding audio objects\n  const [audio, setAudio] = useState([]);\n  // Audio name that is displayed on screen\n  const [activeAudio, setActiveAudio] = useState(\"\");\n  // Array holding audio information (name, id, type...)\n  const [audioData, setAudioData] = useState([]);\n  // On/Off status of the drum-machine\n  const [on, setOn] = useState(true);\n  // The mode state tracks what audio kit is used (\"heater\" by default)\n  const [mode, setMode] = useState(\"heater\");\n  // Audio volume\n  const [volume, setVolume] = useState(0.5);\n\n  // changeToggle is used to \"force\" state change for the activeAudio state\n  // Allows the same active audio name to be displayed when the same\n  // button is clicked repeatedly\n  const [changeToggle, setChangeToggle] = useState(false);\n  // Hide / Show keyboard key labels\n  const [hideKeys, setHideKeys] = useState(false);\n  // Ref to provide access to the drum-machine\n  const drumRef = useRef(null);\n\n  useEffect(() => {\n    // Change the available sounds based on selected audio kit (mode)\n    let data;\n    switch (mode) {\n      case \"heater\":\n        data = heaterKit;\n        break;\n      case \"piano\":\n        data = pianoKit;\n        break;\n      case \"electro\":\n        data = electroKit;\n        break;\n      default:\n        data = \"heater\";\n    }\n    // Create an array of sound objects from the audio kit array\n    const sounds = data.map((item) => {\n      const sound = new Audio(item.src);\n      return sound;\n    });\n    /* \n      Information about each sound file/object\n        id: assigned sound id that is looked up if a sound is played\n        each button is assigned a unique id that corresponds to a sound\n        name: name of the sound (e.g. Heater-1)\n        keyId: key code of the keyboard key\n        char: keyboard caharacter\n        type: sound type (e.g. heater, clap, kick, etc...)\n        clicked: boolean if the sound key is pressed or not\n        plays sound if clicked == true \n    */\n    const soundInfo = data.map((item) => ({\n      id: item.id - 1,\n      name: item.name,\n      keyId: item.key,\n      char: item.char,\n      type: item.type,\n      clicked: false,\n    }));\n    // set audio state that holds the audio objects\n    setAudio(sounds);\n    // set audioData state that holds audio object information\n    setAudioData(soundInfo);\n  }, [mode]);\n\n  function handleClick(id, volume) {\n    // Function that takes in a button id and plays a sound where\n    // the button id === audio object index in the audio aray\n\n    // Don't do anything if the drum-machine is \"off\"\n    if (!on) return;\n\n    audio.forEach((item, index) => {\n      // Each item is an audio object\n      // Play the sound if audio object index === clicked button id\n      if (id === index) {\n        // Clone the audionode to allow the audio to be played multiple\n        // times. There is a significant delay otherwise.\n        // const clone = item.cloneNode();\n        // clone.volume = volume * 1;\n        // clone.play();\n        item.currentTime = 0;\n        item.volume = volume * 1;\n        item.play();\n      }\n    });\n    // Toggle state is being changed everytime to force\n    // the audio name to be redisplayed on the screen\n    // with each repetitive button click.\n    // It \"forces\" the activeAudio state to change in order\n    // to rerender the active audio name on the screen\n    setChangeToggle((prev) => !prev);\n    audioData.forEach((item) => {\n      if (item.id === id) {\n        if (changeToggle) {\n          setActiveAudio(item.name);\n        } else {\n          setActiveAudio(item.name + \" \");\n        }\n      }\n    });\n  }\n\n  function handleKey(event, volume) {\n    // Function that handles key press events\n\n    audioData.forEach((item) => {\n      // Check if the audio object's key id === keyboard event keycode\n      if (item.keyId === event.keyCode) {\n        const id = item.id;\n\n        // Create a copy of the audioData array\n        const copy = audioData.map((item) => {\n          if (item.id === id) {\n            // Change the \"clicked\" property to true\n            return { ...item, clicked: true };\n          }\n          return item;\n        });\n        // Change the audioData state with modified data (copy)\n        setAudioData(copy);\n\n        // Create another copy of the audioData array\n        // This is done to quickly change back the \"clicked\"\n        // property to false\n        // Otherwise the button's animation remains in the clicked\n        // state\n        setTimeout(() => {\n          const copy2 = audioData.map((item) => {\n            if (item.id === id) {\n              return { ...item, clicked: false };\n            }\n            return item;\n          });\n          setAudioData(copy2);\n        }, 200);\n\n        // If the drum machine is \"off\" don't play anything\n        if (!on) return;\n        // Call the handleClick function that plays the volume\n        handleClick(id, volume);\n      }\n    });\n  }\n\n  function changeVolume(event) {\n    // Function that changes the audio volume state\n    setVolume(event.target.value);\n  }\n\n  function toggleOn() {\n    // Function that changes the drum-machine's on/off state\n    setOn((state) => !state);\n  }\n\n  function toggleHideKeys() {\n    // Function that shows or hides key labels\n    setHideKeys((state) => !state);\n  }\n\n  function changeMode(value) {\n    // Function that changes the mode (audio kit) based on input value\n    setMode(value);\n  }\n\n  // Create drum machine button components\n  const buttonComponents = audioData.map((item) => (\n    <Button\n      key={item.id}\n      id={item.id}\n      name={item.name}\n      handleClick={handleClick}\n      char={item.char}\n      type={item.type}\n      volume={volume}\n      clicked={item.clicked}\n      hideKeys={hideKeys}\n      power={on}\n    />\n  ));\n\n  return (\n    <div\n      /* \n        tabIndex = -1 allows the user to play the drum-machine\n        using keyboard keys without having to directly focus\n         on the drum-machine itself\n         \n         E.g. play audio even when a mouse was clicked on\n         the background area \n      */\n      tabIndex={-1}\n      className=\"app\"\n      ref={drumRef}\n      onKeyDown={(event) => handleKey(event, volume)}\n    >\n      <div className=\"container\">\n        <Menu\n          audioName={activeAudio}\n          volume={volume}\n          changeVolume={changeVolume}\n          on={on}\n          toggleOn={toggleOn}\n          mode={mode}\n          changeMode={changeMode}\n          hideKeys={hideKeys}\n          toggleHideKeys={toggleHideKeys}\n        />\n        <div className=\"button-panel\">{buttonComponents}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}